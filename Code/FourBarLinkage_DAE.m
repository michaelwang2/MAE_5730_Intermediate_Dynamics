function zdot = FourBarLinkage_DAE(t,z,p)
x1 = z(1); y1 = z(2); x1d = z(3); y1d = z(4);
x2 = z(5); y2 = z(6); x2d = z(7); y2d = z(8);
x3 = z(9); y3 = z(10); x3d = z(11); y3d = z(12);
th1 = z(13); th2 = z(14); th3 = z(15);
thd1 = z(16); thd2 = z(17); thd3 = z(18);
l1 = p.l(1); l2 = p.l(2); l3 = p.l(3);
I1 = p.I(1); I2 = p.I(2); I3 = p.I(3);
m1 = p.m(1); m2 = p.m(2); m3 = p.m(3);
g = p.g;

x1dd = (l1*(2*I3*l1^2*l2^2*thd1^2*cos(th1 - 2*th2) - 2*I2*l1*l3^3*thd3^2*cos(2*th1 - th3) - 2*I3*l1*l2^3*thd2^2*cos(2*th1 - th2) + 2*I2*l1^2*l3^2*thd1^2*cos(th1 - 2*th3) + (g*l1*l2^2*l3^2*m1)/2 + (3*g*l1*l2^2*l3^2*m2)/4 + (g*l1*l2^2*l3^2*m3)/4 + 2*I3*l1*l2^3*thd2^2*cos(th2) + 2*I2*l1*l3^3*thd3^2*cos(th3) - 2*I1*l2^2*l3^2*thd1^2*cos(th1) - 2*I2*l1^2*l3^2*thd1^2*cos(th1) - 2*I3*l1^2*l2^2*thd1^2*cos(th1) + I1*l2^2*l3^2*thd1^2*cos(th1 - 2*th2 + 2*th3) + I1*l2^2*l3^2*thd1^2*cos(th1 + 2*th2 - 2*th3) - (3*l1*l2^3*l3^2*m2*thd2^2*cos(2*th1 - th2))/4 - (l1*l2^3*l3^2*m3*thd2^2*cos(2*th1 - th2))/2 + (l1*l2^2*l3^3*m2*thd3^2*cos(2*th2 - th3))/2 - (l1*l2^2*l3^3*m3*thd3^2*cos(2*th1 - th3))/4 + (l1*l2^2*l3^3*m3*thd3^2*cos(2*th2 - th3))/4 + l1^2*l2^2*l3^2*m2*thd1^2*cos(th1 - 2*th2) - (l1^2*l2^2*l3^2*m2*thd1^2*cos(th1 - 2*th3))/2 + (l1^2*l2^2*l3^2*m3*thd1^2*cos(th1 - 2*th2))/2 + I2*l1*l2*l3^2*thd2^2*cos(th2 - 2*th3) - (g*l1*l2^2*l3^2*m1*cos(2*th1))/2 - (3*g*l1*l2^2*l3^2*m2*cos(2*th1))/4 + (g*l1*l2^2*l3^2*m2*cos(2*th2))/4 - (g*l1*l2^2*l3^2*m3*cos(2*th1))/4 - (g*l1*l2^2*l3^2*m2*cos(2*th3))/4 + (g*l1*l2^2*l3^2*m3*cos(2*th2))/4 - (g*l1*l2^2*l3^2*m3*cos(2*th3))/4 + (g*l1*l2^2*l3^2*m1*cos(2*th1 - 2*th2 + 2*th3))/4 + (g*l1*l2^2*l3^2*m1*cos(2*th1 + 2*th2 - 2*th3))/4 + (g*l1*l2^2*l3^2*m2*cos(2*th1 - 2*th2 + 2*th3))/2 + (g*l1*l2^2*l3^2*m2*cos(2*th1 + 2*th2 - 2*th3))/4 + (g*l1*l2^2*l3^2*m3*cos(2*th1 - 2*th2 + 2*th3))/4 + (3*l1*l2^3*l3^2*m2*thd2^2*cos(th2))/4 + (l1*l2^3*l3^2*m3*thd2^2*cos(th2))/2 + (l1*l2^2*l3^3*m3*thd3^2*cos(th3))/4 + (l1*l2^3*l3^2*m2*thd2^2*cos(2*th1 + th2 - 2*th3))/4 - (l1*l2^2*l3^3*m2*thd3^2*cos(2*th1 - 2*th2 + th3))/2 - (l1*l2^2*l3^3*m3*thd3^2*cos(2*th1 - 2*th2 + th3))/4 - I2*l1*l2*l3^2*thd2^2*cos(2*th1 - th2) - I3*l1*l2^2*l3*thd3^2*cos(2*th1 - th3) + I3*l1*l2^2*l3*thd3^2*cos(2*th2 - th3) - (g*l1*l2^2*l3^2*m2*cos(2*th1 - 2*th2))/4 - (g*l1*l2^2*l3^2*m1*cos(2*th2 - 2*th3))/2 + (g*l1*l2^2*l3^2*m2*cos(2*th1 - 2*th3))/4 - (g*l1*l2^2*l3^2*m3*cos(2*th1 - 2*th2))/4 - (3*g*l1*l2^2*l3^2*m2*cos(2*th2 - 2*th3))/4 + (g*l1*l2^2*l3^2*m3*cos(2*th1 - 2*th3))/4 - (g*l1*l2^2*l3^2*m3*cos(2*th2 - 2*th3))/4 - (l1*l2^3*l3^2*m2*thd2^2*cos(th2 - 2*th3))/4 - (l1^2*l2^2*l3^2*m1*thd1^2*cos(th1))/2 - (3*l1^2*l2^2*l3^2*m2*thd1^2*cos(th1))/2 - (l1^2*l2^2*l3^2*m3*thd1^2*cos(th1))/2 + (l1^2*l2^2*l3^2*m1*thd1^2*cos(th1 - 2*th2 + 2*th3))/4 + (l1^2*l2^2*l3^2*m1*thd1^2*cos(th1 + 2*th2 - 2*th3))/4 + (l1^2*l2^2*l3^2*m2*thd1^2*cos(th1 - 2*th2 + 2*th3))/2 + (l1^2*l2^2*l3^2*m2*thd1^2*cos(th1 + 2*th2 - 2*th3))/2 + I2*l1*l2*l3^2*thd2^2*cos(th2) + I3*l1*l2^2*l3*thd3^2*cos(th3) - I2*l1*l2*l3^2*thd2^2*cos(2*th1 + th2 - 2*th3) - I3*l1*l2^2*l3*thd3^2*cos(2*th1 - 2*th2 + th3)))/(4*I1*l2^2*l3^2 + 4*I2*l1^2*l3^2 + 4*I3*l1^2*l2^2 + l1^2*l2^2*l3^2*m1 + 3*l1^2*l2^2*l3^2*m2 + l1^2*l2^2*l3^2*m3 - 4*I3*l1^2*l2^2*cos(2*th1 - 2*th2) - 4*I2*l1^2*l3^2*cos(2*th1 - 2*th3) - 4*I1*l2^2*l3^2*cos(2*th2 - 2*th3) - 2*l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th2) - l1^2*l2^2*l3^2*m1*cos(2*th2 - 2*th3) + l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th3) - l1^2*l2^2*l3^2*m3*cos(2*th1 - 2*th2) - 2*l1^2*l2^2*l3^2*m2*cos(2*th2 - 2*th3));
y1dd = -(l1*(2*I3*l1*l2^3*thd2^2*sin(2*th1 - th2) - I1*l2^2*l3^2*thd1^2*sin(th1 + 2*th2 - 2*th3) - I1*l2^2*l3^2*thd1^2*sin(th1 - 2*th2 + 2*th3) + 2*I2*l1*l3^3*thd3^2*sin(2*th1 - th3) + 2*I3*l1^2*l2^2*thd1^2*sin(th1 - 2*th2) + 2*I2*l1^2*l3^2*thd1^2*sin(th1 - 2*th3) - 2*I3*l1*l2^3*thd2^2*sin(th2) - 2*I2*l1*l3^3*thd3^2*sin(th3) + 2*I1*l2^2*l3^2*thd1^2*sin(th1) + 2*I2*l1^2*l3^2*thd1^2*sin(th1) + 2*I3*l1^2*l2^2*thd1^2*sin(th1) - I2*l1*l2*l3^2*thd2^2*sin(th2) - I3*l1*l2^2*l3*thd3^2*sin(th3) + I2*l1*l2*l3^2*thd2^2*sin(2*th1 + th2 - 2*th3) + I3*l1*l2^2*l3*thd3^2*sin(2*th1 - 2*th2 + th3) + (3*l1*l2^3*l3^2*m2*thd2^2*sin(2*th1 - th2))/4 + (l1*l2^3*l3^2*m3*thd2^2*sin(2*th1 - th2))/2 - (l1*l2^2*l3^3*m2*thd3^2*sin(2*th2 - th3))/2 + (l1*l2^2*l3^3*m3*thd3^2*sin(2*th1 - th3))/4 - (l1*l2^2*l3^3*m3*thd3^2*sin(2*th2 - th3))/4 + l1^2*l2^2*l3^2*m2*thd1^2*sin(th1 - 2*th2) - (l1^2*l2^2*l3^2*m2*thd1^2*sin(th1 - 2*th3))/2 + (l1^2*l2^2*l3^2*m3*thd1^2*sin(th1 - 2*th2))/2 + I2*l1*l2*l3^2*thd2^2*sin(th2 - 2*th3) + (g*l1*l2^2*l3^2*m1*sin(2*th1))/2 + (3*g*l1*l2^2*l3^2*m2*sin(2*th1))/4 - (g*l1*l2^2*l3^2*m2*sin(2*th2))/4 + (g*l1*l2^2*l3^2*m3*sin(2*th1))/4 + (g*l1*l2^2*l3^2*m2*sin(2*th3))/4 - (g*l1*l2^2*l3^2*m3*sin(2*th2))/4 + (g*l1*l2^2*l3^2*m3*sin(2*th3))/4 - (g*l1*l2^2*l3^2*m1*sin(2*th1 - 2*th2 + 2*th3))/4 - (g*l1*l2^2*l3^2*m1*sin(2*th1 + 2*th2 - 2*th3))/4 - (g*l1*l2^2*l3^2*m2*sin(2*th1 - 2*th2 + 2*th3))/2 - (g*l1*l2^2*l3^2*m2*sin(2*th1 + 2*th2 - 2*th3))/4 - (g*l1*l2^2*l3^2*m3*sin(2*th1 - 2*th2 + 2*th3))/4 - (3*l1*l2^3*l3^2*m2*thd2^2*sin(th2))/4 - (l1*l2^3*l3^2*m3*thd2^2*sin(th2))/2 - (l1*l2^2*l3^3*m3*thd3^2*sin(th3))/4 - (l1*l2^3*l3^2*m2*thd2^2*sin(2*th1 + th2 - 2*th3))/4 + (l1*l2^2*l3^3*m2*thd3^2*sin(2*th1 - 2*th2 + th3))/2 + (l1*l2^2*l3^3*m3*thd3^2*sin(2*th1 - 2*th2 + th3))/4 + I2*l1*l2*l3^2*thd2^2*sin(2*th1 - th2) + I3*l1*l2^2*l3*thd3^2*sin(2*th1 - th3) - I3*l1*l2^2*l3*thd3^2*sin(2*th2 - th3) + (g*l1*l2^2*l3^2*m2*sin(2*th1 - 2*th2))/4 - (g*l1*l2^2*l3^2*m2*sin(2*th1 - 2*th3))/4 + (g*l1*l2^2*l3^2*m3*sin(2*th1 - 2*th2))/4 + (g*l1*l2^2*l3^2*m2*sin(2*th2 - 2*th3))/4 - (g*l1*l2^2*l3^2*m3*sin(2*th1 - 2*th3))/4 + (g*l1*l2^2*l3^2*m3*sin(2*th2 - 2*th3))/4 - (l1*l2^3*l3^2*m2*thd2^2*sin(th2 - 2*th3))/4 + (l1^2*l2^2*l3^2*m1*thd1^2*sin(th1))/2 + (3*l1^2*l2^2*l3^2*m2*thd1^2*sin(th1))/2 + (l1^2*l2^2*l3^2*m3*thd1^2*sin(th1))/2 - (l1^2*l2^2*l3^2*m1*thd1^2*sin(th1 - 2*th2 + 2*th3))/4 - (l1^2*l2^2*l3^2*m1*thd1^2*sin(th1 + 2*th2 - 2*th3))/4 - (l1^2*l2^2*l3^2*m2*thd1^2*sin(th1 - 2*th2 + 2*th3))/2 - (l1^2*l2^2*l3^2*m2*thd1^2*sin(th1 + 2*th2 - 2*th3))/2))/(4*I1*l2^2*l3^2 + 4*I2*l1^2*l3^2 + 4*I3*l1^2*l2^2 + l1^2*l2^2*l3^2*m1 + 3*l1^2*l2^2*l3^2*m2 + l1^2*l2^2*l3^2*m3 - 4*I3*l1^2*l2^2*cos(2*th1 - 2*th2) - 4*I2*l1^2*l3^2*cos(2*th1 - 2*th3) - 4*I1*l2^2*l3^2*cos(2*th2 - 2*th3) - 2*l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th2) - l1^2*l2^2*l3^2*m1*cos(2*th2 - 2*th3) + l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th3) - l1^2*l2^2*l3^2*m3*cos(2*th1 - 2*th2) - 2*l1^2*l2^2*l3^2*m2*cos(2*th2 - 2*th3));
x2dd = (8*I3*l1^3*l2^2*thd1^2*cos(th1 - 2*th2) + 16*I2*l1^3*l3^2*thd1^2*cos(th1 - 2*th3) + 8*I1*l2^3*l3^2*thd2^2*cos(th2 - 2*th3) - 8*I3*l1^2*l2^3*thd2^2*cos(2*th1 - th2) - 16*I2*l1^2*l3^3*thd3^2*cos(2*th1 - th3) - 8*I1*l2^2*l3^3*thd3^2*cos(2*th2 - th3) + 3*g*l1^2*l2^2*l3^2*m1 + 6*g*l1^2*l2^2*l3^2*m2 + 3*g*l1^2*l2^2*l3^2*m3 - 16*I2*l1^3*l3^2*thd1^2*cos(th1) - 8*I3*l1^3*l2^2*thd1^2*cos(th1) - 8*I1*l2^3*l3^2*thd2^2*cos(th2) + 8*I3*l1^2*l2^3*thd2^2*cos(th2) + 8*I1*l2^2*l3^3*thd3^2*cos(th3) + 16*I2*l1^2*l3^3*thd3^2*cos(th3) - g*l1^2*l2^2*l3^2*m1*cos(2*th1 - 2*th2) + g*l1^2*l2^2*l3^2*m1*cos(2*th1 - 2*th3) - 4*g*l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th2) - 3*g*l1^2*l2^2*l3^2*m1*cos(2*th2 - 2*th3) + 2*g*l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th3) - 3*g*l1^2*l2^2*l3^2*m3*cos(2*th1 - 2*th2) - 4*g*l1^2*l2^2*l3^2*m2*cos(2*th2 - 2*th3) + g*l1^2*l2^2*l3^2*m3*cos(2*th1 - 2*th3) - g*l1^2*l2^2*l3^2*m3*cos(2*th2 - 2*th3) - l1^3*l2^2*l3^2*m1*thd1^2*cos(th1 - 2*th2) + l1^3*l2^2*l3^2*m1*thd1^2*cos(th1 - 2*th3) + 2*l1^3*l2^2*l3^2*m2*thd1^2*cos(th1 - 2*th2) - 2*l1^3*l2^2*l3^2*m2*thd1^2*cos(th1 - 2*th3) + 2*l1^3*l2^2*l3^2*m3*thd1^2*cos(th1 - 2*th2) + 2*l1^2*l2^3*l3^2*m1*thd2^2*cos(th2 - 2*th3) + 2*l1^2*l2^3*l3^2*m2*thd2^2*cos(th2 - 2*th3) - 12*I1*l1*l2^2*l3^2*thd1^2*cos(th1) + 12*I3*l1^2*l2^2*l3*thd3^2*cos(th3) + 8*I1*l1*l2^2*l3^2*thd1^2*cos(th1 - 2*th2 + 2*th3) + 4*I1*l1*l2^2*l3^2*thd1^2*cos(th1 + 2*th2 - 2*th3) + 4*I2*l1^2*l2*l3^2*thd2^2*cos(th2 - 2*th1 + 2*th3) - 4*I2*l1^2*l2*l3^2*thd2^2*cos(2*th1 + th2 - 2*th3) - 4*I3*l1^2*l2^2*l3*thd3^2*cos(2*th2 - 2*th1 + th3) - 8*I3*l1^2*l2^2*l3*thd3^2*cos(2*th1 - 2*th2 + th3) - 2*l1^2*l2^3*l3^2*m2*thd2^2*cos(2*th1 - th2) - 2*l1^2*l2^3*l3^2*m3*thd2^2*cos(2*th1 - th2) - 2*l1^2*l2^2*l3^3*m1*thd3^2*cos(2*th2 - th3) + 2*l1^2*l2^2*l3^3*m2*thd3^2*cos(2*th1 - th3) - 2*l1^2*l2^2*l3^3*m2*thd3^2*cos(2*th2 - th3) - l1^2*l2^2*l3^3*m3*thd3^2*cos(2*th1 - th3) + l1^2*l2^2*l3^3*m3*thd3^2*cos(2*th2 - th3) - 4*I1*l1*l2^2*l3^2*thd1^2*cos(th1 - 2*th2) + 4*I1*l1*l2^2*l3^2*thd1^2*cos(th1 - 2*th3) + 8*I2*l1^2*l2*l3^2*thd2^2*cos(th2 - 2*th3) - 3*g*l1^2*l2^2*l3^2*m1*cos(2*th1) + g*l1^2*l2^2*l3^2*m1*cos(2*th2) - 4*g*l1^2*l2^2*l3^2*m2*cos(2*th1) - g*l1^2*l2^2*l3^2*m1*cos(2*th3) + 2*g*l1^2*l2^2*l3^2*m2*cos(2*th2) - g*l1^2*l2^2*l3^2*m3*cos(2*th1) - 4*g*l1^2*l2^2*l3^2*m2*cos(2*th3) + g*l1^2*l2^2*l3^2*m3*cos(2*th2) - 3*g*l1^2*l2^2*l3^2*m3*cos(2*th3) + 2*g*l1^2*l2^2*l3^2*m1*cos(2*th1 - 2*th2 + 2*th3) + g*l1^2*l2^2*l3^2*m1*cos(2*th1 + 2*th2 - 2*th3) + g*l1^2*l2^2*l3^2*m2*cos(2*th2 - 2*th1 + 2*th3) + 4*g*l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th2 + 2*th3) + g*l1^2*l2^2*l3^2*m2*cos(2*th1 + 2*th2 - 2*th3) + g*l1^2*l2^2*l3^2*m3*cos(2*th2 - 2*th1 + 2*th3) + 2*g*l1^2*l2^2*l3^2*m3*cos(2*th1 - 2*th2 + 2*th3) - 3*l1^3*l2^2*l3^2*m1*thd1^2*cos(th1) - 6*l1^3*l2^2*l3^2*m2*thd1^2*cos(th1) - 2*l1^2*l2^3*l3^2*m1*thd2^2*cos(th2) - 2*l1^3*l2^2*l3^2*m3*thd1^2*cos(th1) + 2*l1^2*l2^2*l3^3*m1*thd3^2*cos(th3) + 2*l1^2*l2^3*l3^2*m3*thd2^2*cos(th2) + 6*l1^2*l2^2*l3^3*m2*thd3^2*cos(th3) + 3*l1^2*l2^2*l3^3*m3*thd3^2*cos(th3) + 2*l1^3*l2^2*l3^2*m1*thd1^2*cos(th1 - 2*th2 + 2*th3) + l1^3*l2^2*l3^2*m1*thd1^2*cos(th1 + 2*th2 - 2*th3) + 4*l1^3*l2^2*l3^2*m2*thd1^2*cos(th1 - 2*th2 + 2*th3) + 2*l1^3*l2^2*l3^2*m2*thd1^2*cos(th1 + 2*th2 - 2*th3) - l1^2*l2^3*l3^2*m2*thd2^2*cos(th2 - 2*th1 + 2*th3) + l1^2*l2^3*l3^2*m2*thd2^2*cos(2*th1 + th2 - 2*th3) - 2*l1^2*l2^2*l3^3*m2*thd3^2*cos(2*th2 - 2*th1 + th3) - 4*l1^2*l2^2*l3^3*m2*thd3^2*cos(2*th1 - 2*th2 + th3) - l1^2*l2^2*l3^3*m3*thd3^2*cos(2*th2 - 2*th1 + th3) - 2*l1^2*l2^2*l3^3*m3*thd3^2*cos(2*th1 - 2*th2 + th3) - 8*I2*l1^2*l2*l3^2*thd2^2*cos(2*th1 - th2) - 4*I3*l1^2*l2^2*l3*thd3^2*cos(2*th1 - th3) + 4*I3*l1^2*l2^2*l3*thd3^2*cos(2*th2 - th3))/(4*(4*I1*l2^2*l3^2 + 4*I2*l1^2*l3^2 + 4*I3*l1^2*l2^2 + l1^2*l2^2*l3^2*m1 + 3*l1^2*l2^2*l3^2*m2 + l1^2*l2^2*l3^2*m3 - 4*I3*l1^2*l2^2*cos(2*th1 - 2*th2) - 4*I2*l1^2*l3^2*cos(2*th1 - 2*th3) - 4*I1*l2^2*l3^2*cos(2*th2 - 2*th3) - 2*l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th2) - l1^2*l2^2*l3^2*m1*cos(2*th2 - 2*th3) + l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th3) - l1^2*l2^2*l3^2*m3*cos(2*th1 - 2*th2) - 2*l1^2*l2^2*l3^2*m2*cos(2*th2 - 2*th3)));
y2dd = -(8*I3*l1^3*l2^2*thd1^2*sin(th1 - 2*th2) + 16*I2*l1^3*l3^2*thd1^2*sin(th1 - 2*th3) + 8*I1*l2^3*l3^2*thd2^2*sin(th2 - 2*th3) + 8*I3*l1^2*l2^3*thd2^2*sin(2*th1 - th2) + 16*I2*l1^2*l3^3*thd3^2*sin(2*th1 - th3) + 8*I1*l2^2*l3^3*thd3^2*sin(2*th2 - th3) + 16*I2*l1^3*l3^2*thd1^2*sin(th1) + 8*I3*l1^3*l2^2*thd1^2*sin(th1) + 8*I1*l2^3*l3^2*thd2^2*sin(th2) - 8*I3*l1^2*l2^3*thd2^2*sin(th2) - 8*I1*l2^2*l3^3*thd3^2*sin(th3) - 16*I2*l1^2*l3^3*thd3^2*sin(th3) - g*l1^2*l2^2*l3^2*m1*sin(2*th1 - 2*th2) + g*l1^2*l2^2*l3^2*m1*sin(2*th1 - 2*th3) - g*l1^2*l2^2*l3^2*m1*sin(2*th2 - 2*th3) + g*l1^2*l2^2*l3^2*m3*sin(2*th1 - 2*th2) - g*l1^2*l2^2*l3^2*m3*sin(2*th1 - 2*th3) + g*l1^2*l2^2*l3^2*m3*sin(2*th2 - 2*th3) - l1^3*l2^2*l3^2*m1*thd1^2*sin(th1 - 2*th2) + l1^3*l2^2*l3^2*m1*thd1^2*sin(th1 - 2*th3) + 2*l1^3*l2^2*l3^2*m2*thd1^2*sin(th1 - 2*th2) - 2*l1^3*l2^2*l3^2*m2*thd1^2*sin(th1 - 2*th3) + 2*l1^3*l2^2*l3^2*m3*thd1^2*sin(th1 - 2*th2) + 2*l1^2*l2^3*l3^2*m1*thd2^2*sin(th2 - 2*th3) + 2*l1^2*l2^3*l3^2*m2*thd2^2*sin(th2 - 2*th3) + 12*I1*l1*l2^2*l3^2*thd1^2*sin(th1) - 12*I3*l1^2*l2^2*l3*thd3^2*sin(th3) - 8*I1*l1*l2^2*l3^2*thd1^2*sin(th1 - 2*th2 + 2*th3) - 4*I1*l1*l2^2*l3^2*thd1^2*sin(th1 + 2*th2 - 2*th3) - 4*I2*l1^2*l2*l3^2*thd2^2*sin(th2 - 2*th1 + 2*th3) + 4*I2*l1^2*l2*l3^2*thd2^2*sin(2*th1 + th2 - 2*th3) + 4*I3*l1^2*l2^2*l3*thd3^2*sin(2*th2 - 2*th1 + th3) + 8*I3*l1^2*l2^2*l3*thd3^2*sin(2*th1 - 2*th2 + th3) + 2*l1^2*l2^3*l3^2*m2*thd2^2*sin(2*th1 - th2) + 2*l1^2*l2^3*l3^2*m3*thd2^2*sin(2*th1 - th2) + 2*l1^2*l2^2*l3^3*m1*thd3^2*sin(2*th2 - th3) - 2*l1^2*l2^2*l3^3*m2*thd3^2*sin(2*th1 - th3) + 2*l1^2*l2^2*l3^3*m2*thd3^2*sin(2*th2 - th3) + l1^2*l2^2*l3^3*m3*thd3^2*sin(2*th1 - th3) - l1^2*l2^2*l3^3*m3*thd3^2*sin(2*th2 - th3) - 4*I1*l1*l2^2*l3^2*thd1^2*sin(th1 - 2*th2) + 4*I1*l1*l2^2*l3^2*thd1^2*sin(th1 - 2*th3) + 8*I2*l1^2*l2*l3^2*thd2^2*sin(th2 - 2*th3) + 3*g*l1^2*l2^2*l3^2*m1*sin(2*th1) - g*l1^2*l2^2*l3^2*m1*sin(2*th2) + 4*g*l1^2*l2^2*l3^2*m2*sin(2*th1) + g*l1^2*l2^2*l3^2*m1*sin(2*th3) - 2*g*l1^2*l2^2*l3^2*m2*sin(2*th2) + g*l1^2*l2^2*l3^2*m3*sin(2*th1) + 4*g*l1^2*l2^2*l3^2*m2*sin(2*th3) - g*l1^2*l2^2*l3^2*m3*sin(2*th2) + 3*g*l1^2*l2^2*l3^2*m3*sin(2*th3) - 2*g*l1^2*l2^2*l3^2*m1*sin(2*th1 - 2*th2 + 2*th3) - g*l1^2*l2^2*l3^2*m1*sin(2*th1 + 2*th2 - 2*th3) - g*l1^2*l2^2*l3^2*m2*sin(2*th2 - 2*th1 + 2*th3) - 4*g*l1^2*l2^2*l3^2*m2*sin(2*th1 - 2*th2 + 2*th3) - g*l1^2*l2^2*l3^2*m2*sin(2*th1 + 2*th2 - 2*th3) - g*l1^2*l2^2*l3^2*m3*sin(2*th2 - 2*th1 + 2*th3) - 2*g*l1^2*l2^2*l3^2*m3*sin(2*th1 - 2*th2 + 2*th3) + 3*l1^3*l2^2*l3^2*m1*thd1^2*sin(th1) + 6*l1^3*l2^2*l3^2*m2*thd1^2*sin(th1) + 2*l1^2*l2^3*l3^2*m1*thd2^2*sin(th2) + 2*l1^3*l2^2*l3^2*m3*thd1^2*sin(th1) - 2*l1^2*l2^2*l3^3*m1*thd3^2*sin(th3) - 2*l1^2*l2^3*l3^2*m3*thd2^2*sin(th2) - 6*l1^2*l2^2*l3^3*m2*thd3^2*sin(th3) - 3*l1^2*l2^2*l3^3*m3*thd3^2*sin(th3) - 2*l1^3*l2^2*l3^2*m1*thd1^2*sin(th1 - 2*th2 + 2*th3) - l1^3*l2^2*l3^2*m1*thd1^2*sin(th1 + 2*th2 - 2*th3) - 4*l1^3*l2^2*l3^2*m2*thd1^2*sin(th1 - 2*th2 + 2*th3) - 2*l1^3*l2^2*l3^2*m2*thd1^2*sin(th1 + 2*th2 - 2*th3) + l1^2*l2^3*l3^2*m2*thd2^2*sin(th2 - 2*th1 + 2*th3) - l1^2*l2^3*l3^2*m2*thd2^2*sin(2*th1 + th2 - 2*th3) + 2*l1^2*l2^2*l3^3*m2*thd3^2*sin(2*th2 - 2*th1 + th3) + 4*l1^2*l2^2*l3^3*m2*thd3^2*sin(2*th1 - 2*th2 + th3) + l1^2*l2^2*l3^3*m3*thd3^2*sin(2*th2 - 2*th1 + th3) + 2*l1^2*l2^2*l3^3*m3*thd3^2*sin(2*th1 - 2*th2 + th3) + 8*I2*l1^2*l2*l3^2*thd2^2*sin(2*th1 - th2) + 4*I3*l1^2*l2^2*l3*thd3^2*sin(2*th1 - th3) - 4*I3*l1^2*l2^2*l3*thd3^2*sin(2*th2 - th3))/(4*(4*I1*l2^2*l3^2 + 4*I2*l1^2*l3^2 + 4*I3*l1^2*l2^2 + l1^2*l2^2*l3^2*m1 + 3*l1^2*l2^2*l3^2*m2 + l1^2*l2^2*l3^2*m3 - 4*I3*l1^2*l2^2*cos(2*th1 - 2*th2) - 4*I2*l1^2*l3^2*cos(2*th1 - 2*th3) - 4*I1*l2^2*l3^2*cos(2*th2 - 2*th3) - 2*l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th2) - l1^2*l2^2*l3^2*m1*cos(2*th2 - 2*th3) + l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th3) - l1^2*l2^2*l3^2*m3*cos(2*th1 - 2*th2) - 2*l1^2*l2^2*l3^2*m2*cos(2*th2 - 2*th3)));
x3dd = -(l3*(2*I2*l1^2*l3^2*thd3^2*cos(2*th1 - th3) - (3*g*l1^2*l2^2*l3*m2)/4 - (g*l1^2*l2^2*l3*m3)/2 - (g*l1^2*l2^2*l3*m1)/4 + 2*I1*l2^2*l3^2*thd3^2*cos(2*th2 - th3) + 2*I2*l1^3*l3*thd1^2*cos(th1) + 2*I1*l2^3*l3*thd2^2*cos(th2) - 2*I2*l1^3*l3*thd1^2*cos(th1 - 2*th3) - 2*I1*l2^3*l3*thd2^2*cos(th2 - 2*th3) - 2*I1*l2^2*l3^2*thd3^2*cos(th3) - 2*I2*l1^2*l3^2*thd3^2*cos(th3) - 2*I3*l1^2*l2^2*thd3^2*cos(th3) + I3*l1^2*l2^2*thd3^2*cos(2*th2 - 2*th1 + th3) + I3*l1^2*l2^2*thd3^2*cos(2*th1 - 2*th2 + th3) - (l1^2*l2^3*l3*m2*thd2^2*cos(2*th1 - th2))/4 + I1*l1*l2^2*l3*thd1^2*cos(th1 - 2*th2) - I1*l1*l2^2*l3*thd1^2*cos(th1 - 2*th3) - I2*l1^2*l2*l3*thd2^2*cos(th2 - 2*th3) + (l1^2*l2^2*l3^2*m1*thd3^2*cos(2*th2 - th3))/2 - (l1^2*l2^2*l3^2*m2*thd3^2*cos(2*th1 - th3))/2 + l1^2*l2^2*l3^2*m2*thd3^2*cos(2*th2 - th3) + (g*l1^2*l2^2*l3*m1*cos(2*th1))/4 - (g*l1^2*l2^2*l3*m1*cos(2*th2))/4 + (g*l1^2*l2^2*l3*m2*cos(2*th1))/4 + (g*l1^2*l2^2*l3*m1*cos(2*th3))/4 - (g*l1^2*l2^2*l3*m2*cos(2*th2))/4 + (3*g*l1^2*l2^2*l3*m2*cos(2*th3))/4 + (g*l1^2*l2^2*l3*m3*cos(2*th3))/2 - (g*l1^2*l2^2*l3*m1*cos(2*th1 - 2*th2 + 2*th3))/4 - (g*l1^2*l2^2*l3*m2*cos(2*th2 - 2*th1 + 2*th3))/4 - (g*l1^2*l2^2*l3*m2*cos(2*th1 - 2*th2 + 2*th3))/2 - (g*l1^2*l2^2*l3*m3*cos(2*th2 - 2*th1 + 2*th3))/4 - (g*l1^2*l2^2*l3*m3*cos(2*th1 - 2*th2 + 2*th3))/4 + (l1^3*l2^2*l3*m1*thd1^2*cos(th1))/4 + (l1^2*l2^3*l3*m1*thd2^2*cos(th2))/2 + (3*l1^2*l2^3*l3*m2*thd2^2*cos(th2))/4 - (l1^3*l2^2*l3*m1*thd1^2*cos(th1 - 2*th2 + 2*th3))/4 - (l1^3*l2^2*l3*m2*thd1^2*cos(th1 - 2*th2 + 2*th3))/2 + (l1^2*l2^3*l3*m2*thd2^2*cos(th2 - 2*th1 + 2*th3))/4 + I2*l1^2*l2*l3*thd2^2*cos(2*th1 - th2) + (g*l1^2*l2^2*l3*m1*cos(2*th1 - 2*th2))/4 - (g*l1^2*l2^2*l3*m1*cos(2*th1 - 2*th3))/4 + (3*g*l1^2*l2^2*l3*m2*cos(2*th1 - 2*th2))/4 + (g*l1^2*l2^2*l3*m1*cos(2*th2 - 2*th3))/4 - (g*l1^2*l2^2*l3*m2*cos(2*th1 - 2*th3))/4 + (g*l1^2*l2^2*l3*m3*cos(2*th1 - 2*th2))/2 + (g*l1^2*l2^2*l3*m2*cos(2*th2 - 2*th3))/4 + (l1^3*l2^2*l3*m1*thd1^2*cos(th1 - 2*th2))/4 - (l1^3*l2^2*l3*m1*thd1^2*cos(th1 - 2*th3))/4 + (l1^3*l2^2*l3*m2*thd1^2*cos(th1 - 2*th2))/2 - (l1^2*l2^3*l3*m1*thd2^2*cos(th2 - 2*th3))/2 - (3*l1^2*l2^3*l3*m2*thd2^2*cos(th2 - 2*th3))/4 - (l1^2*l2^2*l3^2*m1*thd3^2*cos(th3))/2 - (3*l1^2*l2^2*l3^2*m2*thd3^2*cos(th3))/2 - (l1^2*l2^2*l3^2*m3*thd3^2*cos(th3))/2 + (l1^2*l2^2*l3^2*m2*thd3^2*cos(2*th2 - 2*th1 + th3))/2 + (l1^2*l2^2*l3^2*m2*thd3^2*cos(2*th1 - 2*th2 + th3))/2 + (l1^2*l2^2*l3^2*m3*thd3^2*cos(2*th2 - 2*th1 + th3))/4 + (l1^2*l2^2*l3^2*m3*thd3^2*cos(2*th1 - 2*th2 + th3))/4 + I1*l1*l2^2*l3*thd1^2*cos(th1) + I2*l1^2*l2*l3*thd2^2*cos(th2) - I1*l1*l2^2*l3*thd1^2*cos(th1 - 2*th2 + 2*th3) - I2*l1^2*l2*l3*thd2^2*cos(th2 - 2*th1 + 2*th3)))/(4*I1*l2^2*l3^2 + 4*I2*l1^2*l3^2 + 4*I3*l1^2*l2^2 + l1^2*l2^2*l3^2*m1 + 3*l1^2*l2^2*l3^2*m2 + l1^2*l2^2*l3^2*m3 - 4*I3*l1^2*l2^2*cos(2*th1 - 2*th2) - 4*I2*l1^2*l3^2*cos(2*th1 - 2*th3) - 4*I1*l2^2*l3^2*cos(2*th2 - 2*th3) - 2*l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th2) - l1^2*l2^2*l3^2*m1*cos(2*th2 - 2*th3) + l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th3) - l1^2*l2^2*l3^2*m3*cos(2*th1 - 2*th2) - 2*l1^2*l2^2*l3^2*m2*cos(2*th2 - 2*th3));
y3dd = -(l3*(I3*l1^2*l2^2*thd3^2*sin(2*th2 - 2*th1 + th3) + I3*l1^2*l2^2*thd3^2*sin(2*th1 - 2*th2 + th3) + 2*I2*l1^2*l3^2*thd3^2*sin(2*th1 - th3) + 2*I1*l2^2*l3^2*thd3^2*sin(2*th2 - th3) + 2*I2*l1^3*l3*thd1^2*sin(th1) + 2*I1*l2^3*l3*thd2^2*sin(th2) + 2*I2*l1^3*l3*thd1^2*sin(th1 - 2*th3) + 2*I1*l2^3*l3*thd2^2*sin(th2 - 2*th3) - 2*I1*l2^2*l3^2*thd3^2*sin(th3) - 2*I2*l1^2*l3^2*thd3^2*sin(th3) - 2*I3*l1^2*l2^2*thd3^2*sin(th3) + I1*l1*l2^2*l3*thd1^2*sin(th1) + I2*l1^2*l2*l3*thd2^2*sin(th2) - I1*l1*l2^2*l3*thd1^2*sin(th1 - 2*th2 + 2*th3) - I2*l1^2*l2*l3*thd2^2*sin(th2 - 2*th1 + 2*th3) - (l1^2*l2^3*l3*m2*thd2^2*sin(2*th1 - th2))/4 - I1*l1*l2^2*l3*thd1^2*sin(th1 - 2*th2) + I1*l1*l2^2*l3*thd1^2*sin(th1 - 2*th3) + I2*l1^2*l2*l3*thd2^2*sin(th2 - 2*th3) + (l1^2*l2^2*l3^2*m1*thd3^2*sin(2*th2 - th3))/2 - (l1^2*l2^2*l3^2*m2*thd3^2*sin(2*th1 - th3))/2 + l1^2*l2^2*l3^2*m2*thd3^2*sin(2*th2 - th3) + (g*l1^2*l2^2*l3*m1*sin(2*th1))/4 - (g*l1^2*l2^2*l3*m1*sin(2*th2))/4 + (g*l1^2*l2^2*l3*m2*sin(2*th1))/4 + (g*l1^2*l2^2*l3*m1*sin(2*th3))/4 - (g*l1^2*l2^2*l3*m2*sin(2*th2))/4 + (3*g*l1^2*l2^2*l3*m2*sin(2*th3))/4 + (g*l1^2*l2^2*l3*m3*sin(2*th3))/2 - (g*l1^2*l2^2*l3*m1*sin(2*th1 - 2*th2 + 2*th3))/4 - (g*l1^2*l2^2*l3*m2*sin(2*th2 - 2*th1 + 2*th3))/4 - (g*l1^2*l2^2*l3*m2*sin(2*th1 - 2*th2 + 2*th3))/2 - (g*l1^2*l2^2*l3*m3*sin(2*th2 - 2*th1 + 2*th3))/4 - (g*l1^2*l2^2*l3*m3*sin(2*th1 - 2*th2 + 2*th3))/4 + (l1^3*l2^2*l3*m1*thd1^2*sin(th1))/4 + (l1^2*l2^3*l3*m1*thd2^2*sin(th2))/2 + (3*l1^2*l2^3*l3*m2*thd2^2*sin(th2))/4 - (l1^3*l2^2*l3*m1*thd1^2*sin(th1 - 2*th2 + 2*th3))/4 - (l1^3*l2^2*l3*m2*thd1^2*sin(th1 - 2*th2 + 2*th3))/2 + (l1^2*l2^3*l3*m2*thd2^2*sin(th2 - 2*th1 + 2*th3))/4 + I2*l1^2*l2*l3*thd2^2*sin(2*th1 - th2) - (g*l1^2*l2^2*l3*m1*sin(2*th1 - 2*th2))/4 + (g*l1^2*l2^2*l3*m1*sin(2*th1 - 2*th3))/4 - (g*l1^2*l2^2*l3*m2*sin(2*th1 - 2*th2))/4 - (g*l1^2*l2^2*l3*m1*sin(2*th2 - 2*th3))/4 + (g*l1^2*l2^2*l3*m2*sin(2*th1 - 2*th3))/4 - (g*l1^2*l2^2*l3*m2*sin(2*th2 - 2*th3))/4 - (l1^3*l2^2*l3*m1*thd1^2*sin(th1 - 2*th2))/4 + (l1^3*l2^2*l3*m1*thd1^2*sin(th1 - 2*th3))/4 - (l1^3*l2^2*l3*m2*thd1^2*sin(th1 - 2*th2))/2 + (l1^2*l2^3*l3*m1*thd2^2*sin(th2 - 2*th3))/2 + (3*l1^2*l2^3*l3*m2*thd2^2*sin(th2 - 2*th3))/4 - (l1^2*l2^2*l3^2*m1*thd3^2*sin(th3))/2 - (3*l1^2*l2^2*l3^2*m2*thd3^2*sin(th3))/2 - (l1^2*l2^2*l3^2*m3*thd3^2*sin(th3))/2 + (l1^2*l2^2*l3^2*m2*thd3^2*sin(2*th2 - 2*th1 + th3))/2 + (l1^2*l2^2*l3^2*m2*thd3^2*sin(2*th1 - 2*th2 + th3))/2 + (l1^2*l2^2*l3^2*m3*thd3^2*sin(2*th2 - 2*th1 + th3))/4 + (l1^2*l2^2*l3^2*m3*thd3^2*sin(2*th1 - 2*th2 + th3))/4))/(4*I1*l2^2*l3^2 + 4*I2*l1^2*l3^2 + 4*I3*l1^2*l2^2 + l1^2*l2^2*l3^2*m1 + 3*l1^2*l2^2*l3^2*m2 + l1^2*l2^2*l3^2*m3 - 4*I3*l1^2*l2^2*cos(2*th1 - 2*th2) - 4*I2*l1^2*l3^2*cos(2*th1 - 2*th3) - 4*I1*l2^2*l3^2*cos(2*th2 - 2*th3) - 2*l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th2) - l1^2*l2^2*l3^2*m1*cos(2*th2 - 2*th3) + l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th3) - l1^2*l2^2*l3^2*m3*cos(2*th1 - 2*th2) - 2*l1^2*l2^2*l3^2*m2*cos(2*th2 - 2*th3));
thdd1 = -(4*I3*l1^2*l2^2*thd1^2*sin(2*th1 - 2*th2) + 4*I2*l1^2*l3^2*thd1^2*sin(2*th1 - 2*th3) + 8*I3*l1*l2^3*thd2^2*sin(th1 - th2) + 8*I2*l1*l3^3*thd3^2*sin(th1 - th3) + 2*g*l1*l2^2*l3^2*m1*sin(th1) + 3*g*l1*l2^2*l3^2*m2*sin(th1) + g*l1*l2^2*l3^2*m3*sin(th1) - g*l1*l2^2*l3^2*m1*sin(th1 - 2*th2 + 2*th3) - g*l1*l2^2*l3^2*m1*sin(th1 + 2*th2 - 2*th3) - 2*g*l1*l2^2*l3^2*m2*sin(th1 - 2*th2 + 2*th3) - g*l1*l2^2*l3^2*m2*sin(th1 + 2*th2 - 2*th3) - g*l1*l2^2*l3^2*m3*sin(th1 - 2*th2 + 2*th3) - l1*l2^3*l3^2*m2*thd2^2*sin(th1 + th2 - 2*th3) + 2*l1*l2^2*l3^3*m2*thd3^2*sin(th1 - 2*th2 + th3) + l1*l2^2*l3^3*m3*thd3^2*sin(th1 - 2*th2 + th3) + 4*I2*l1*l2*l3^2*thd2^2*sin(th1 - th2) + 4*I3*l1*l2^2*l3*thd3^2*sin(th1 - th3) + g*l1*l2^2*l3^2*m2*sin(th1 - 2*th2) - g*l1*l2^2*l3^2*m2*sin(th1 - 2*th3) + g*l1*l2^2*l3^2*m3*sin(th1 - 2*th2) - g*l1*l2^2*l3^2*m3*sin(th1 - 2*th3) + 2*l1^2*l2^2*l3^2*m2*thd1^2*sin(2*th1 - 2*th2) - l1^2*l2^2*l3^2*m2*thd1^2*sin(2*th1 - 2*th3) + l1^2*l2^2*l3^2*m3*thd1^2*sin(2*th1 - 2*th2) + 4*I2*l1*l2*l3^2*thd2^2*sin(th1 + th2 - 2*th3) + 4*I3*l1*l2^2*l3*thd3^2*sin(th1 - 2*th2 + th3) + 3*l1*l2^3*l3^2*m2*thd2^2*sin(th1 - th2) + 2*l1*l2^3*l3^2*m3*thd2^2*sin(th1 - th2) + l1*l2^2*l3^3*m3*thd3^2*sin(th1 - th3))/(4*I1*l2^2*l3^2 + 4*I2*l1^2*l3^2 + 4*I3*l1^2*l2^2 + l1^2*l2^2*l3^2*m1 + 3*l1^2*l2^2*l3^2*m2 + l1^2*l2^2*l3^2*m3 - 4*I3*l1^2*l2^2*cos(2*th1 - 2*th2) - 4*I2*l1^2*l3^2*cos(2*th1 - 2*th3) - 4*I1*l2^2*l3^2*cos(2*th2 - 2*th3) - 2*l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th2) - l1^2*l2^2*l3^2*m1*cos(2*th2 - 2*th3) + l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th3) - l1^2*l2^2*l3^2*m3*cos(2*th1 - 2*th2) - 2*l1^2*l2^2*l3^2*m2*cos(2*th2 - 2*th3));
thdd2 = (4*I3*l1^2*l2^2*thd2^2*sin(2*th1 - 2*th2) - 4*I1*l2^2*l3^2*thd2^2*sin(2*th2 - 2*th3) + 8*I3*l1^3*l2*thd1^2*sin(th1 - th2) - 8*I1*l2*l3^3*thd3^2*sin(th2 - th3) + g*l1^2*l2*l3^2*m1*sin(th2) - g*l1^2*l2*l3^2*m3*sin(th2) - g*l1^2*l2*l3^2*m1*sin(2*th1 + th2 - 2*th3) + g*l1^2*l2*l3^2*m2*sin(th2 - 2*th1 + 2*th3) - g*l1^2*l2*l3^2*m2*sin(2*th1 + th2 - 2*th3) + g*l1^2*l2*l3^2*m3*sin(th2 - 2*th1 + 2*th3) - l1^3*l2*l3^2*m1*thd1^2*sin(th1 + th2 - 2*th3) - 2*l1^3*l2*l3^2*m2*thd1^2*sin(th1 + th2 - 2*th3) - 2*l1^2*l2*l3^3*m2*thd3^2*sin(th2 - 2*th1 + th3) - l1^2*l2*l3^3*m3*thd3^2*sin(th2 - 2*th1 + th3) + 4*I1*l1*l2*l3^2*thd1^2*sin(th1 - th2) - 4*I3*l1^2*l2*l3*thd3^2*sin(th2 - th3) + g*l1^2*l2*l3^2*m1*sin(th2 - 2*th3) + 2*g*l1^2*l2*l3^2*m2*sin(th2 - 2*th3) + g*l1^2*l2*l3^2*m3*sin(th2 - 2*th3) + 2*l1^2*l2^2*l3^2*m2*thd2^2*sin(2*th1 - 2*th2) - l1^2*l2^2*l3^2*m1*thd2^2*sin(2*th2 - 2*th3) + l1^2*l2^2*l3^2*m3*thd2^2*sin(2*th1 - 2*th2) - 2*l1^2*l2^2*l3^2*m2*thd2^2*sin(2*th2 - 2*th3) - 4*I1*l1*l2*l3^2*thd1^2*sin(th1 + th2 - 2*th3) - 4*I3*l1^2*l2*l3*thd3^2*sin(th2 - 2*th1 + th3) + g*l1^2*l2*l3^2*m1*sin(2*th1 - th2) + 2*g*l1^2*l2*l3^2*m2*sin(2*th1 - th2) + g*l1^2*l2*l3^2*m3*sin(2*th1 - th2) + l1^3*l2*l3^2*m1*thd1^2*sin(th1 - th2) + 6*l1^3*l2*l3^2*m2*thd1^2*sin(th1 - th2) + 2*l1^3*l2*l3^2*m3*thd1^2*sin(th1 - th2) - 2*l1^2*l2*l3^3*m1*thd3^2*sin(th2 - th3) - 6*l1^2*l2*l3^3*m2*thd3^2*sin(th2 - th3) - l1^2*l2*l3^3*m3*thd3^2*sin(th2 - th3))/(4*I1*l2^2*l3^2 + 4*I2*l1^2*l3^2 + 4*I3*l1^2*l2^2 + l1^2*l2^2*l3^2*m1 + 3*l1^2*l2^2*l3^2*m2 + l1^2*l2^2*l3^2*m3 - 4*I3*l1^2*l2^2*cos(2*th1 - 2*th2) - 4*I2*l1^2*l3^2*cos(2*th1 - 2*th3) - 4*I1*l2^2*l3^2*cos(2*th2 - 2*th3) - 2*l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th2) - l1^2*l2^2*l3^2*m1*cos(2*th2 - 2*th3) + l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th3) - l1^2*l2^2*l3^2*m3*cos(2*th1 - 2*th2) - 2*l1^2*l2^2*l3^2*m2*cos(2*th2 - 2*th3));
thdd3 = (4*I2*l1^2*l3^2*thd3^2*sin(2*th1 - 2*th3) + 4*I1*l2^2*l3^2*thd3^2*sin(2*th2 - 2*th3) + 8*I2*l1^3*l3*thd1^2*sin(th1 - th3) + 8*I1*l2^3*l3*thd2^2*sin(th2 - th3) + g*l1^2*l2^2*l3*m1*sin(th3) + 3*g*l1^2*l2^2*l3*m2*sin(th3) + 2*g*l1^2*l2^2*l3*m3*sin(th3) - g*l1^2*l2^2*l3*m1*sin(2*th1 - 2*th2 + th3) - g*l1^2*l2^2*l3*m2*sin(2*th2 - 2*th1 + th3) - 2*g*l1^2*l2^2*l3*m2*sin(2*th1 - 2*th2 + th3) - g*l1^2*l2^2*l3*m3*sin(2*th2 - 2*th1 + th3) - g*l1^2*l2^2*l3*m3*sin(2*th1 - 2*th2 + th3) - l1^3*l2^2*l3*m1*thd1^2*sin(th1 - 2*th2 + th3) - 2*l1^3*l2^2*l3*m2*thd1^2*sin(th1 - 2*th2 + th3) + l1^2*l2^3*l3*m2*thd2^2*sin(th2 - 2*th1 + th3) + 4*I1*l1*l2^2*l3*thd1^2*sin(th1 - th3) + 4*I2*l1^2*l2*l3*thd2^2*sin(th2 - th3) + l1^2*l2^2*l3^2*m1*thd3^2*sin(2*th2 - 2*th3) - l1^2*l2^2*l3^2*m2*thd3^2*sin(2*th1 - 2*th3) + 2*l1^2*l2^2*l3^2*m2*thd3^2*sin(2*th2 - 2*th3) - 4*I1*l1*l2^2*l3*thd1^2*sin(th1 - 2*th2 + th3) - 4*I2*l1^2*l2*l3*thd2^2*sin(th2 - 2*th1 + th3) + g*l1^2*l2^2*l3*m1*sin(2*th1 - th3) - g*l1^2*l2^2*l3*m1*sin(2*th2 - th3) + g*l1^2*l2^2*l3*m2*sin(2*th1 - th3) - g*l1^2*l2^2*l3*m2*sin(2*th2 - th3) + l1^3*l2^2*l3*m1*thd1^2*sin(th1 - th3) + 2*l1^2*l2^3*l3*m1*thd2^2*sin(th2 - th3) + 3*l1^2*l2^3*l3*m2*thd2^2*sin(th2 - th3))/(4*I1*l2^2*l3^2 + 4*I2*l1^2*l3^2 + 4*I3*l1^2*l2^2 + l1^2*l2^2*l3^2*m1 + 3*l1^2*l2^2*l3^2*m2 + l1^2*l2^2*l3^2*m3 - 4*I3*l1^2*l2^2*cos(2*th1 - 2*th2) - 4*I2*l1^2*l3^2*cos(2*th1 - 2*th3) - 4*I1*l2^2*l3^2*cos(2*th2 - 2*th3) - 2*l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th2) - l1^2*l2^2*l3^2*m1*cos(2*th2 - 2*th3) + l1^2*l2^2*l3^2*m2*cos(2*th1 - 2*th3) - l1^2*l2^2*l3^2*m3*cos(2*th1 - 2*th2) - 2*l1^2*l2^2*l3^2*m2*cos(2*th2 - 2*th3));

zdot = [x1d; y1d; x1dd; y1dd; x2d; y2d; x2dd; y2dd; x3d; y3d; x3dd; y3dd; thd1; thd2; thd3; thdd1; thdd2; thdd3];
end
