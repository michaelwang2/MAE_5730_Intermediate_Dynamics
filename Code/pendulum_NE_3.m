function zdot = pendulum_NE_3(t,z,p)
m1 = p.m(1); m2 = p.m(2); m3 = p.m(3);
I1 = p.I(1); I2 = p.I(2); I3 = p.I(3);
l1 = p.l(1); l2 = p.l(2); l3 = p.l(3);
g = p.g;
th1 = z(1); th2 = z(2); th3 = z(3);
thd1 = z(4); thd2 = z(5); thd3 = z(6);

thdd1 = -(2*(16*I2*I3*g*l1*m1*sin(th1) + 32*I2*I3*g*l1*m2*sin(th1) + 32*I2*I3*g*l1*m3*sin(th1) + 4*I3*g*l1*l2^2*m2^2*sin(th1 - 2*th2) + 16*I3*g*l1*l2^2*m3^2*sin(th1 - 2*th2) + 4*I2*g*l1*l3^2*m3^2*sin(th1 - 2*th3) + 4*I3*l1^2*l2^2*m2^2*thd1^2*sin(2*th1 - 2*th2) + 16*I3*l1^2*l2^2*m3^2*thd1^2*sin(2*th1 - 2*th2) + 4*I2*l1^2*l3^2*m3^2*thd1^2*sin(2*th1 - 2*th3) + 4*I3*l1*l2^3*m2^2*thd2^2*sin(th1 - th2) + 32*I3*l1*l2^3*m3^2*thd2^2*sin(th1 - th2) + 4*I2*l1*l3^3*m3^2*thd3^2*sin(th1 - th3) + 4*I3*g*l1*l2^2*m2^2*sin(th1) + 4*I2*g*l1*l3^2*m3^2*sin(th1) + 16*I3*g*l1*l2^2*m3^2*sin(th1) + 4*I2*l1*l2*l3^2*m3^2*thd2^2*sin(th1 - th2) + 8*I3*l1*l2^2*l3*m3^2*thd3^2*sin(th1 - th3) + 4*I3*g*l1*l2^2*m1*m2*sin(th1) + 4*I2*g*l1*l3^2*m1*m3*sin(th1) + 16*I3*g*l1*l2^2*m1*m3*sin(th1) + 8*I2*g*l1*l3^2*m2*m3*sin(th1) + 24*I3*g*l1*l2^2*m2*m3*sin(th1) + 2*g*l1*l2^2*l3^2*m2*m3^2*sin(th1 - 2*th2) + g*l1*l2^2*l3^2*m2^2*m3*sin(th1 - 2*th2) - g*l1*l2^2*l3^2*m2*m3^2*sin(th1 - 2*th3) + 16*I2*I3*l1*l2*m2*thd2^2*sin(th1 - th2) + 32*I2*I3*l1*l2*m3*thd2^2*sin(th1 - th2) + 16*I2*I3*l1*l3*m3*thd3^2*sin(th1 - th3) + 16*I3*g*l1*l2^2*m2*m3*sin(th1 - 2*th2) + 2*l1^2*l2^2*l3^2*m2*m3^2*thd1^2*sin(2*th1 - 2*th2) + l1^2*l2^2*l3^2*m2^2*m3*thd1^2*sin(2*th1 - 2*th2) - l1^2*l2^2*l3^2*m2*m3^2*thd1^2*sin(2*th1 - 2*th3) + 16*I3*l1^2*l2^2*m2*m3*thd1^2*sin(2*th1 - 2*th2) + 4*I2*l1*l2*l3^2*m3^2*thd2^2*sin(th1 + th2 - 2*th3) + 8*I3*l1*l2^2*l3*m3^2*thd3^2*sin(th1 - 2*th2 + th3) + 3*l1*l2^3*l3^2*m2*m3^2*thd2^2*sin(th1 - th2) + l1*l2^3*l3^2*m2^2*m3*thd2^2*sin(th1 - th2) + 24*I3*l1*l2^3*m2*m3*thd2^2*sin(th1 - th2) + 2*g*l1*l2^2*l3^2*m1*m3^2*sin(th1) + 3*g*l1*l2^2*l3^2*m2*m3^2*sin(th1) + g*l1*l2^2*l3^2*m2^2*m3*sin(th1) - g*l1*l2^2*l3^2*m1*m3^2*sin(th1 - 2*th2 + 2*th3) - g*l1*l2^2*l3^2*m1*m3^2*sin(th1 + 2*th2 - 2*th3) - g*l1*l2^2*l3^2*m2*m3^2*sin(th1 - 2*th2 + 2*th3) - g*l1*l2^2*l3^2*m2*m3^2*sin(th1 + 2*th2 - 2*th3) - l1*l2^3*l3^2*m2*m3^2*thd2^2*sin(th1 + th2 - 2*th3) + l1*l2^2*l3^3*m2*m3^2*thd3^2*sin(th1 - 2*th2 + th3) + 4*I2*l1*l2*l3^2*m2*m3*thd2^2*sin(th1 - th2) + 4*I3*l1*l2^2*l3*m2*m3*thd3^2*sin(th1 - 2*th2 + th3) + g*l1*l2^2*l3^2*m1*m2*m3*sin(th1)))/(64*I1*I2*I3 + 8*I3*l1^2*l2^2*m2^2 + 8*I1*l2^2*l3^2*m3^2 + 8*I2*l1^2*l3^2*m3^2 + 32*I3*l1^2*l2^2*m3^2 + 16*I2*I3*l1^2*m1 + 16*I1*I3*l2^2*m2 + 64*I2*I3*l1^2*m2 + 16*I1*I2*l3^2*m3 + 64*I1*I3*l2^2*m3 + 64*I2*I3*l1^2*m3 + 4*I3*l1^2*l2^2*m1*m2 + 4*I2*l1^2*l3^2*m1*m3 + 16*I3*l1^2*l2^2*m1*m3 + 4*I1*l2^2*l3^2*m2*m3 + 16*I2*l1^2*l3^2*m2*m3 + 48*I3*l1^2*l2^2*m2*m3 - 8*I3*l1^2*l2^2*m2^2*cos(2*th1 - 2*th2) - 32*I3*l1^2*l2^2*m3^2*cos(2*th1 - 2*th2) - 8*I2*l1^2*l3^2*m3^2*cos(2*th1 - 2*th3) - 8*I1*l2^2*l3^2*m3^2*cos(2*th2 - 2*th3) + 2*l1^2*l2^2*l3^2*m1*m3^2 + 6*l1^2*l2^2*l3^2*m2*m3^2 + 2*l1^2*l2^2*l3^2*m2^2*m3 + l1^2*l2^2*l3^2*m1*m2*m3 - 4*l1^2*l2^2*l3^2*m2*m3^2*cos(2*th1 - 2*th2) - 2*l1^2*l2^2*l3^2*m2^2*m3*cos(2*th1 - 2*th2) - 2*l1^2*l2^2*l3^2*m1*m3^2*cos(2*th2 - 2*th3) + 2*l1^2*l2^2*l3^2*m2*m3^2*cos(2*th1 - 2*th3) - 4*l1^2*l2^2*l3^2*m2*m3^2*cos(2*th2 - 2*th3) - 32*I3*l1^2*l2^2*m2*m3*cos(2*th1 - 2*th2));
thdd2 = -(2*(16*I1*I3*g*l2*m2*sin(th2) + 32*I1*I3*g*l2*m3*sin(th2) + 4*I1*g*l2*l3^2*m3^2*sin(th2 - 2*th3) - 4*I3*l1^2*l2^2*m2^2*thd2^2*sin(2*th1 - 2*th2) - 16*I3*l1^2*l2^2*m3^2*thd2^2*sin(2*th1 - 2*th2) + 4*I1*l2^2*l3^2*m3^2*thd2^2*sin(2*th2 - 2*th3) - 8*I3*g*l1^2*l2*m2^2*sin(2*th1 - th2) - 16*I3*g*l1^2*l2*m3^2*sin(2*th1 - th2) - 16*I3*l1^3*l2*m2^2*thd1^2*sin(th1 - th2) - 32*I3*l1^3*l2*m3^2*thd1^2*sin(th1 - th2) + 4*I1*l2*l3^3*m3^2*thd3^2*sin(th2 - th3) + 8*I3*g*l1^2*l2*m2^2*sin(th2) + 4*I1*g*l2*l3^2*m3^2*sin(th2) + 16*I3*g*l1^2*l2*m3^2*sin(th2) - 4*I1*l1*l2*l3^2*m3^2*thd1^2*sin(th1 - th2) + 8*I3*l1^2*l2*l3*m3^2*thd3^2*sin(th2 - th3) + 4*I1*g*l2*l3^2*m2*m3*sin(th2) + 24*I3*g*l1^2*l2*m2*m3*sin(th2) + g*l1^2*l2*l3^2*m2*m3^2*sin(th2 - 2*th3) - 16*I1*I3*l1*l2*m2*thd1^2*sin(th1 - th2) - 32*I1*I3*l1*l2*m3*thd1^2*sin(th1 - th2) + 16*I1*I3*l2*l3*m3*thd3^2*sin(th2 - th3) - 2*l1^2*l2^2*l3^2*m2*m3^2*thd2^2*sin(2*th1 - 2*th2) - l1^2*l2^2*l3^2*m2^2*m3*thd2^2*sin(2*th1 - 2*th2) + l1^2*l2^2*l3^2*m1*m3^2*thd2^2*sin(2*th2 - 2*th3) + 2*l1^2*l2^2*l3^2*m2*m3^2*thd2^2*sin(2*th2 - 2*th3) - 16*I3*l1^2*l2^2*m2*m3*thd2^2*sin(2*th1 - 2*th2) + 4*I1*l1*l2*l3^2*m3^2*thd1^2*sin(th1 + th2 - 2*th3) + 8*I3*l1^2*l2*l3*m3^2*thd3^2*sin(th2 - 2*th1 + th3) - g*l1^2*l2*l3^2*m1*m3^2*sin(2*th1 - th2) - 3*g*l1^2*l2*l3^2*m2*m3^2*sin(2*th1 - th2) - 2*g*l1^2*l2*l3^2*m2^2*m3*sin(2*th1 - th2) - l1^3*l2*l3^2*m1*m3^2*thd1^2*sin(th1 - th2) - 6*l1^3*l2*l3^2*m2*m3^2*thd1^2*sin(th1 - th2) - 4*l1^3*l2*l3^2*m2^2*m3*thd1^2*sin(th1 - th2) + l1^2*l2*l3^3*m1*m3^2*thd3^2*sin(th2 - th3) + 3*l1^2*l2*l3^3*m2*m3^2*thd3^2*sin(th2 - th3) - 4*I3*g*l1^2*l2*m1*m2*sin(2*th1 - th2) - 8*I3*g*l1^2*l2*m1*m3*sin(2*th1 - th2) - 24*I3*g*l1^2*l2*m2*m3*sin(2*th1 - th2) - 4*I3*l1^3*l2*m1*m2*thd1^2*sin(th1 - th2) - 8*I3*l1^3*l2*m1*m3*thd1^2*sin(th1 - th2) - 48*I3*l1^3*l2*m2*m3*thd1^2*sin(th1 - th2) + 3*g*l1^2*l2*l3^2*m2*m3^2*sin(th2) + 2*g*l1^2*l2*l3^2*m2^2*m3*sin(th2) + g*l1^2*l2*l3^2*m1*m3^2*sin(2*th1 + th2 - 2*th3) + g*l1^2*l2*l3^2*m2*m3^2*sin(2*th1 + th2 - 2*th3) + l1^3*l2*l3^2*m1*m3^2*thd1^2*sin(th1 + th2 - 2*th3) + 2*l1^3*l2*l3^2*m2*m3^2*thd1^2*sin(th1 + th2 - 2*th3) + l1^2*l2*l3^3*m2*m3^2*thd3^2*sin(th2 - 2*th1 + th3) - 4*I1*l1*l2*l3^2*m2*m3*thd1^2*sin(th1 - th2) + 4*I3*l1^2*l2*l3*m1*m3*thd3^2*sin(th2 - th3) + 12*I3*l1^2*l2*l3*m2*m3*thd3^2*sin(th2 - th3) + 4*I3*l1^2*l2*l3*m2*m3*thd3^2*sin(th2 - 2*th1 + th3) - g*l1^2*l2*l3^2*m1*m2*m3*sin(2*th1 - th2) - l1^3*l2*l3^2*m1*m2*m3*thd1^2*sin(th1 - th2)))/(64*I1*I2*I3 + 8*I3*l1^2*l2^2*m2^2 + 8*I1*l2^2*l3^2*m3^2 + 8*I2*l1^2*l3^2*m3^2 + 32*I3*l1^2*l2^2*m3^2 + 16*I2*I3*l1^2*m1 + 16*I1*I3*l2^2*m2 + 64*I2*I3*l1^2*m2 + 16*I1*I2*l3^2*m3 + 64*I1*I3*l2^2*m3 + 64*I2*I3*l1^2*m3 + 4*I3*l1^2*l2^2*m1*m2 + 4*I2*l1^2*l3^2*m1*m3 + 16*I3*l1^2*l2^2*m1*m3 + 4*I1*l2^2*l3^2*m2*m3 + 16*I2*l1^2*l3^2*m2*m3 + 48*I3*l1^2*l2^2*m2*m3 - 8*I3*l1^2*l2^2*m2^2*cos(2*th1 - 2*th2) - 32*I3*l1^2*l2^2*m3^2*cos(2*th1 - 2*th2) - 8*I2*l1^2*l3^2*m3^2*cos(2*th1 - 2*th3) - 8*I1*l2^2*l3^2*m3^2*cos(2*th2 - 2*th3) + 2*l1^2*l2^2*l3^2*m1*m3^2 + 6*l1^2*l2^2*l3^2*m2*m3^2 + 2*l1^2*l2^2*l3^2*m2^2*m3 + l1^2*l2^2*l3^2*m1*m2*m3 - 4*l1^2*l2^2*l3^2*m2*m3^2*cos(2*th1 - 2*th2) - 2*l1^2*l2^2*l3^2*m2^2*m3*cos(2*th1 - 2*th2) - 2*l1^2*l2^2*l3^2*m1*m3^2*cos(2*th2 - 2*th3) + 2*l1^2*l2^2*l3^2*m2*m3^2*cos(2*th1 - 2*th3) - 4*l1^2*l2^2*l3^2*m2*m3^2*cos(2*th2 - 2*th3) - 32*I3*l1^2*l2^2*m2*m3*cos(2*th1 - 2*th2));
thdd3 = (2*m3*(g*l1^2*l2^2*l3*m2^2*sin(2*th2 - th3) - g*l1^2*l2^2*l3*m2^2*sin(2*th1 - th3) - 16*I1*I2*g*l3*sin(th3) - 2*l1^3*l2^2*l3*m2^2*thd1^2*sin(th1 - th3) + l1^2*l2^3*l3*m2^2*thd2^2*sin(th2 - th3) + 4*I2*g*l1^2*l3*m1*sin(2*th1 - th3) + 8*I2*g*l1^2*l3*m2*sin(2*th1 - th3) + 4*I1*g*l2^2*l3*m2*sin(2*th2 - th3) + 8*I2*g*l1^2*l3*m3*sin(2*th1 - th3) + 8*I1*g*l2^2*l3*m3*sin(2*th2 - th3) + 4*I2*l1^3*l3*m1*thd1^2*sin(th1 - th3) + 16*I2*l1^3*l3*m2*thd1^2*sin(th1 - th3) + 16*I2*l1^3*l3*m3*thd1^2*sin(th1 - th3) + 4*I1*l2^3*l3*m2*thd2^2*sin(th2 - th3) + 16*I1*l2^3*l3*m3*thd2^2*sin(th2 - th3) + g*l1^2*l2^2*l3*m2^2*sin(th3) - g*l1^2*l2^2*l3*m2^2*sin(2*th1 - 2*th2 + th3) - 2*l1^3*l2^2*l3*m2^2*thd1^2*sin(th1 - 2*th2 + th3) + l1^2*l2^3*l3*m2^2*thd2^2*sin(th2 - 2*th1 + th3) - 8*I2*g*l1^2*l3*m2*sin(th3) - 8*I1*g*l2^2*l3*m3*sin(th3) - 8*I2*g*l1^2*l3*m3*sin(th3) + 16*I1*I2*l1*l3*thd1^2*sin(th1 - th3) + 16*I1*I2*l2*l3*thd2^2*sin(th2 - th3) + 4*I2*l1^2*l3^2*m3*thd3^2*sin(2*th1 - 2*th3) + 4*I1*l2^2*l3^2*m3*thd3^2*sin(2*th2 - 2*th3) - 4*I1*l1*l2^2*l3*m2*thd1^2*sin(th1 - 2*th2 + th3) - 8*I1*l1*l2^2*l3*m3*thd1^2*sin(th1 - 2*th2 + th3) - 4*I2*l1^2*l2*l3*m2*thd2^2*sin(th2 - 2*th1 + th3) - 8*I2*l1^2*l2*l3*m3*thd2^2*sin(th2 - 2*th1 + th3) + 2*g*l1^2*l2^2*l3*m1*m3*sin(2*th1 - th3) + 2*g*l1^2*l2^2*l3*m2*m3*sin(2*th2 - th3) + 2*l1^3*l2^2*l3*m1*m3*thd1^2*sin(th1 - th3) + l1^2*l2^3*l3*m1*m2*thd2^2*sin(th2 - th3) + 4*l1^2*l2^3*l3*m1*m3*thd2^2*sin(th2 - th3) + 6*l1^2*l2^3*l3*m2*m3*thd2^2*sin(th2 - th3) - g*l1^2*l2^2*l3*m1*m2*sin(2*th1 - 2*th2 + th3) - 2*g*l1^2*l2^2*l3*m1*m3*sin(2*th1 - 2*th2 + th3) - 2*g*l1^2*l2^2*l3*m2*m3*sin(2*th1 - 2*th2 + th3) - l1^3*l2^2*l3*m1*m2*thd1^2*sin(th1 - 2*th2 + th3) - 2*l1^3*l2^2*l3*m1*m3*thd1^2*sin(th1 - 2*th2 + th3) - 4*l1^3*l2^2*l3*m2*m3*thd1^2*sin(th1 - 2*th2 + th3) + 2*l1^2*l2^3*l3*m2*m3*thd2^2*sin(th2 - 2*th1 + th3) + 8*I1*l1*l2^2*l3*m3*thd1^2*sin(th1 - th3) + 4*I2*l1^2*l2*l3*m1*thd2^2*sin(th2 - th3) + 12*I2*l1^2*l2*l3*m2*thd2^2*sin(th2 - th3) + 8*I2*l1^2*l2*l3*m3*thd2^2*sin(th2 - th3) + l1^2*l2^2*l3^2*m1*m3*thd3^2*sin(2*th2 - 2*th3) - l1^2*l2^2*l3^2*m2*m3*thd3^2*sin(2*th1 - 2*th3) + 2*l1^2*l2^2*l3^2*m2*m3*thd3^2*sin(2*th2 - 2*th3)))/(64*I1*I2*I3 + 8*I3*l1^2*l2^2*m2^2 + 8*I1*l2^2*l3^2*m3^2 + 8*I2*l1^2*l3^2*m3^2 + 32*I3*l1^2*l2^2*m3^2 + 16*I2*I3*l1^2*m1 + 16*I1*I3*l2^2*m2 + 64*I2*I3*l1^2*m2 + 16*I1*I2*l3^2*m3 + 64*I1*I3*l2^2*m3 + 64*I2*I3*l1^2*m3 + 4*I3*l1^2*l2^2*m1*m2 + 4*I2*l1^2*l3^2*m1*m3 + 16*I3*l1^2*l2^2*m1*m3 + 4*I1*l2^2*l3^2*m2*m3 + 16*I2*l1^2*l3^2*m2*m3 + 48*I3*l1^2*l2^2*m2*m3 - 8*I3*l1^2*l2^2*m2^2*cos(2*th1 - 2*th2) - 32*I3*l1^2*l2^2*m3^2*cos(2*th1 - 2*th2) - 8*I2*l1^2*l3^2*m3^2*cos(2*th1 - 2*th3) - 8*I1*l2^2*l3^2*m3^2*cos(2*th2 - 2*th3) + 2*l1^2*l2^2*l3^2*m1*m3^2 + 6*l1^2*l2^2*l3^2*m2*m3^2 + 2*l1^2*l2^2*l3^2*m2^2*m3 + l1^2*l2^2*l3^2*m1*m2*m3 - 4*l1^2*l2^2*l3^2*m2*m3^2*cos(2*th1 - 2*th2) - 2*l1^2*l2^2*l3^2*m2^2*m3*cos(2*th1 - 2*th2) - 2*l1^2*l2^2*l3^2*m1*m3^2*cos(2*th2 - 2*th3) + 2*l1^2*l2^2*l3^2*m2*m3^2*cos(2*th1 - 2*th3) - 4*l1^2*l2^2*l3^2*m2*m3^2*cos(2*th2 - 2*th3) - 32*I3*l1^2*l2^2*m2*m3*cos(2*th1 - 2*th2));

zdot = [thd1; thd2; thd3; thdd1; thdd2; thdd3];
end